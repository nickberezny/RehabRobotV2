{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.89280c365c68a20c3bca.hot-update.js","sources":["webpack:///./components/ContentWindow.jsx"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SetupPage from './Pages/SetupPage'\r\nimport UserPage from './Pages/UserPage'\r\nimport SettingsPage from './Pages/SettingsPage'\r\n\r\nimport io from \"socket.io-client\";\r\nimport { setValue } from \"../src/actions\";\r\n\r\nlet WIRELESS = 1\r\n\r\nclass WindowContent extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\r\n\t    super(props);\r\n\r\n\t    this.handleMessage = this.handleMessage.bind(this);\r\n\t    this.handleInfo = this.handleInfo.bind(this);\r\n\t    this.handleHome = this.handleHome.bind(this);\r\n\r\n\t    this.state = { \r\n\t    \tcontent: null,\r\n\t    \tstyle: null,\r\n\t    \tinfo: null, \r\n\t    \thome: null,\r\n\t    };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t    var socketio = io();\r\n\t    socketio.on('message', this.handleMessage) \r\n\t    socketio.on('END', this.handleEnd) \r\n\t    socketio.on('INFO', this.handleInfo) \r\n\t    socketio.on('HOME', this.handleHome) \r\n\t    console.log(socketio);\r\n\t    this.props.setValue('socket', socketio)\t \r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t    console.log('unmount')\r\n\t    this.props.socket.close()\r\n\t}\r\n\r\n\thandleInfo = (message) => {\r\n\t\tvar res = message.toString().split(',')\r\n\t\tvar test= <div> Force Offset: {res[1]}, Total Length: {res[2]} </div>\r\n\t\tthis.setState({ info: test });\r\n\t\t\r\n\t\t//this.forceUpdate();\r\n\t}\r\n\r\n\thandleHome() {\r\n\t\tvar test = <div>Back Home Complete</div> \r\n\t\tthis.setState({ home: test });\r\n\t}\r\n\r\n\thandleEnd() {\r\n\t\tvar test = <div>Experiment Finished</div> \r\n\t\tthis.setState({ info: test });\r\n\t}\r\n\t\r\n\r\n\thandleMessage = (message) => {\r\n\t    console.log('Message Recieved: ' + message);\r\n\t    var res = message.split(\",\");\r\n\t    this.props.setValue('x', res[0])\r\n\t    this.props.setValue('xdes', res[1])\r\n\t    this.props.setValue('v', res[2])\r\n\t    this.props.setValue('vdes', res[3])\r\n\t    this.props.setValue('x_ball', res[4])\r\n\t    this.props.setValue('x_end', res[5])\r\n\t    this.setState({ info: null, home: null });\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tif(this.props.menuOpen) {\r\n\t    \tthis.state.style = {\r\n\t\t\t\ttransition: 'marginLeft 6',\r\n\t\t\t\tmarginLeft: 255 ,\r\n\t\t\t\tpadding: 20\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.state.style = {\r\n\t\t\t\ttransition: 'marginLeft 6',\r\n\t\t\t\tmarginLeft: 0,\r\n\t\t\t\tpadding: 20\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch(this.props.activePage) {\r\n\t\t\tcase 1:\r\n\t\t\t\t  if(this.props.user == 1) {this.state.content = <div style={this.state.style}> <SetupPage /> </div>}\r\n\t\t\t\t  if(this.props.user == 2) {this.state.content = <div style={this.state.style}> <SetupPage /> </div>}\r\n\t\t\t\t  break;\r\n\t\t\tcase 2:\r\n\t\t\t\t  this.state.content = <div style={this.state.style}> <SettingsPage /> {this.state.home} {this.state.info}  </div>\r\n\t\t\t\t  break;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.state.content = <div style={this.state.style}> <SettingsPage /> </div>\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t  this.state.content = <div style={this.state.style}> Page Load Failed </div>\t\t\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.content}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\t\r\n\t//map state variables to the component's state \r\n \treturn {\r\n \t\tactivePage: state.activePage,\r\n \t\tmenuOpen: state.menuOpen,\r\n \t\tsocket: state.socket,\r\n \t\tuser: state.user ,\r\n \t\tstage: state.stage,\r\n \t\texp: state.exp,\r\n \t\tgame: state.game,\r\n \t}\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setValue } //add importing action functions here\r\n)(WindowContent);\r\n\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAiCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAvCA;AAoDA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AA3DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AARA;AAcA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;;;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAgBA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtGA;AACA;AAyGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAEA;AAEA;AACA;AADA;;;;A","sourceRoot":""}